import{ar as M,as as b,at as y,A as g,au as v,av as x,S as k,aw as D,ax as T,ay as m,az as L,aA as j,aB as B,aC as H,aD as E,r as w,aE as R,aF as C,aG as F,z as G,ah as A}from"./index-B3wLd9-D.js";const n={score:{Single:100,Double:300,Triple:500,Tetris:800,TSpinZero:400,TSpinSingle:800,TSpinDouble:1200,TSpinTriple:1600,SoftDrop:1,HardDrop:2},rule:{placingResetCnt:15},levelGravityTick:[48,48,43,38,33,28,23,18,13,8,6,5,5,5,4,4,3,3,2,2,1],gfx:{instancedMeshReserve:5e3,url:{font3d:"https://cdn.jsdelivr.net/npm/three@0.178.0/examples/fonts/helvetiker_bold.typeface.json",tetriminoGlb:"/glb/basicBlock2.glb"},font3d:{size:1,depth:.5},color:{mesh:{Hint:"white",Garbage:"#4A4F5A",I:"#00FFFF",O:"#FFFF00",T:"#800080",J:"#0000FF",L:"#FFA500",S:"#00FF00",Z:"#FF0000",Case:"black",Cover:"#1a1a1a",EndCover:"#1a1a1a",Grid:"gray",GarbageQueue:"#F08080",GarbageReady:"#8B0000",Hold:"black",Next:"black"}},placeIdMap:{1:"I",2:"O",3:"T",4:"J",5:"L",6:"S",7:"Z",8:"Garbage"},blockLocation:{I:[[0,0],[1,0],[2,0],[3,0]],O:[[0,0],[1,0],[1,1],[0,1]],T:[[0,0],[1,0],[2,0],[1,1]],J:[[0,1],[1,1],[2,1],[2,0]],L:[[0,0],[0,1],[1,1],[2,1]],S:[[0,0],[1,1],[1,0],[2,1]],Z:[[2,0],[1,1],[1,0],[0,1]]},boardCoord:{nickNameText:[{position:[5,-27,0],scale:[2,2,2]}],infoText:[{position:[-4,-18,0],scale:[1,1,1]}],Case:[{position:[4.5,-26+.4,0],scale:[10+.4,.2,1]},{position:[10-.4,-15.5,0],scale:[.2,20,1]},{position:[-1+.4,-15.5,0],scale:[.2,20,1]}],Grid:[...Array(9).fill(null).map((f,t)=>({position:[.5+t,-15.5,-.5],scale:[.05,20,.05]})),...Array(19).fill(null).map((f,t)=>({position:[4.5,-6.5+-t,-.5],scale:[10,.05,.05]}))],Cover:[{position:[4.5,-15.5,-.51],scale:[10,20,.01]}],EndCover:[{position:[4.5,-15.5,.71],scale:[10,20,.01]}],Next:[{position:[12,-5,0],scale:[1,1,1]}],Hold:[{position:[-6,-5,0],scale:[1,1,1]}]}}};class S{board=new M(10,26);hold=null;next=[];boardId;nickName;info={};combo=0;sevenBag=[];isBoardActive=!1;isAddEndCover=!1;isCanHold=!0;isTSpin=!1;tick=0;stepTick=0;comboTick=0;isPlacingDelay=!1;placingDelayTick=0;placingResetCnt=n.rule.placingResetCnt;garbageQueue=[];timer;actionHandler;renderHandler;tickerHandler;ctrl;wsSender;constructor(t,e,s){this.boardId=e,this.nickName=s,this.timer=new Q(this.info),this.renderHandler=new O(this,t),this.ctrl=new N(this)}boardSync(t){for(const[e,s]of t.board.entries())for(const[i,c]of s.entries())this.board.setLocation(i,e,c);this.hold=t.hold,this.next=t.next,this.info.level=t.level,this.info.score=t.score,this.info.line=t.line,this.info.time=t.elapsed/1e3,this.timer.set(this.info.time),t.isBoardEnd?(this.timer.off(),this.renderHandler.removeEndCover(),this.renderHandler.addEndCover(),this.isAddEndCover=!0):this.timer.on(),this.renderHandler.isDirty=!0}getTetriminoFromSevenBag(){if(this.sevenBag.length===0){const t=["I","O","T","J","L","S","Z"],e=[];for(;t.length;){const s=Math.floor(Math.random()*t.length);e.push(t.splice(s,1)[0])}this.sevenBag=e}return this.sevenBag.shift()}placing(){this.ctrl.placing();const t=this.board.tryLineClear(),e=t.length;if(t.length){if(this.info.line!==void 0?this.info.line+=e:this.info.line=0,this.info.level!==void 0){const c=(r,a,h)=>Math.min(Math.max(r,a),h);this.info.level=c(Math.floor(this.info.line/10)+1,1,20)}this.comboTick>0&&(this.combo+=1),this.comboTick=150}this.ctrl.lineClear();let s=null,i=0;if(this.isTSpin?e===0?(s="TSpinZero",i=n.score.TSpinZero):e===1?(s="TSpinSingle",i=n.score.TSpinSingle):e===2?(s="TSpinDouble",i=n.score.TSpinDouble):e===3&&(s="TSpinTriple",i=n.score.TSpinTriple):e===1?(s="Single",i=n.score.Single):e===2?(s="Double",i=n.score.Double):e===3?(s="Triple",i=n.score.Triple):e===4&&(s="Tetris",i=n.score.Tetris),s){const c=this.info.level??1;this.info.score!==void 0&&(this.info.score+=i*c+200*this.combo)}return this.ctrl.setInfo({line:this.info.line,level:this.info.level,score:this.info.score}),this.isCanHold=!0,this.isTSpin=!1,this.renderHandler.isDirty=!0,[e,s]}spawnFromNext(){const t=this.ctrl.shiftNext();if(t)try{return this.spawnWithGameOverCheck(t)?(this.ctrl.spawn(t),this.stepTick=999,this.ctrl.pushNext(this.getTetriminoFromSevenBag()),this.renderHandler.isDirty=!0,!0):!1}catch{return!1}else return!1}spawnWithGameOverCheck(t){const e=this.board.trySpawnFalling(t);for(const{location:s}of e)if(this.board.getLocation(s.x,s.y)!=="Empty")return!1;return!0}tSpinCheck(){const t=this.board.getFallingBlocks();if(t.length&&t[0].falling.kind==="T"){let e=!1,s=!1;const i=[[-1,-1],[1,1],[1,-1],[-1,1]],c=t.filter(r=>r.falling.id===2).map(r=>r.location);let o=0;if(c.length){const r=this.board;for(const[a,h]of i){const d=c[0].x+a,l=c[0].y+h;if(d<r.xLen&&l<r.yLen){const u=r.getLocation(d,l);typeof u=="object"&&"Placed"in u&&(o+=1)}else o+=1}o>=3&&(s=!0)}return s&&(e=!0),e}else return!1}showFallingHint(){this.board.removeFallingHint(),this.board.showFallingHint()}init(t){this.renderHandler.create(t),this.renderHandler.updateNickNameText(this.nickName)}destroy(){this.renderHandler.destroy()}}class N{tb;constructor(t){this.tb=t}setup(t){this.tb.hold=t.hold,this.tb.next=t.next,this.tb.board=new M(10,26),this.tb.info.level=1,this.tb.info.score=0,this.tb.info.time=0,this.tb.info.line=0,this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend({setup:{next:t.next,hold:t.hold}})}sync(){throw new Error("Method not implemented.")}countdown(t){throw new Error("Method not implemented."+t)}garbageQueue(t){this.tb.garbageQueue=t,this.tb.renderHandler.garbageQueueSet(t)}garbageAdd(t){for(const e of t)this.tb.board.pushGarbageLine(e)||this.boardEnd();this.tb.wsSender&&this.tb.wsSender.wsSend({addGarbageQueue:{empty:t}}),this.tb.renderHandler.isDirty=!0}boardStart(){console.log("boardStart"),this.tb.timer.reset(),this.tb.renderHandler.removeEndCover(),this.tb.isAddEndCover=!1,this.tb.renderHandler.removeGarbageQueue(),this.tb.timer.on(),this.tb.isBoardActive=!0}boardEnd(t){console.log("gameEnd"),this.tb.renderHandler.removeEndCover(),this.tb.renderHandler.addEndCover(),this.tb.isAddEndCover=!0,this.tb.timer.off(),t&&(this.tb.info.time=t),this.tb.isBoardActive=!1,this.tb.wsSender&&this.tb.wsSender.wsSend("boardEnd")}shiftNext(){const t=this.tb.next.shift();return this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend({shiftNext:{next:t}}),t}pushNext(t){this.tb.next.push(t),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend({pushNext:{next:t}})}spawn(t){const e=this.tb.board;e.applySpawnFalling(e.trySpawnFalling(t)),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend({spawn:{spawn:t}})}placing(){this.tb.board.placeFalling(),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("placing")}lineClear(){const t=this.tb.board;t.applyLineClear(t.tryLineClear()),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("lineClear")}setInfo(t){t.level&&(this.tb.info.level=t.level),t.score&&(this.tb.info.score=t.score),t.line&&(this.tb.info.line=t.line),this.tb.wsSender&&this.tb.wsSender.wsSend({setInfo:{line:t.line,score:t.score,level:t.level}})}scoreEffect(t,e){this.tb.renderHandler.scoreEffect(t,e),this.tb.wsSender&&this.tb.wsSender.wsSend({scoreEffect:{kind:t,combo:e}})}step(){const t=this.tb.board;t.applyStep(t.tryStep()),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("step")}moveLeft(){const t=this.tb.board;t.applyMoveFalling(t.tryMoveFalling("Left")),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("moveLeft")}moveRight(){const t=this.tb.board;t.applyMoveFalling(t.tryMoveFalling("Right")),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("moveRight")}rotateLeft(){const t=this.tb.board;t.applyRotateFalling(t.tryRotateFalling("Left")),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("rotateLeft")}rotateRight(){const t=this.tb.board;t.applyRotateFalling(t.tryRotateFalling("Right")),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("rotateRight")}softDrop(){const t=this.tb.board;t.applyStep(t.tryStep()),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("softDrop")}hardDrop(){const t=this.tb.board.hardDrop();return this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("hardDrop"),t}addHold(t){this.tb.hold=t,this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend({addHold:{hold:t}})}removeFalling(){this.tb.board.removeFallingBlocks(),this.tb.renderHandler.isDirty=!0,this.tb.wsSender&&this.tb.wsSender.wsSend("removeFalling")}}class Q{isTimerOn=!1;timerLastUpdated=0;timerAccumulate=0;info;constructor(t){this.info=t}tick(t){this.isTimerOn&&(this.timerAccumulate+=t,this.timerAccumulate-this.timerLastUpdated>.05&&(this.info.time=this.timerAccumulate,this.timerLastUpdated=this.timerAccumulate))}set(t){this.timerAccumulate=t}on(){this.isTimerOn=!0}off(){this.isTimerOn=!1}reset(){this.timerAccumulate=0,this.timerLastUpdated=0,this.info.time=0}}class P{tb;constructor(t){this.tb=t}initTicking(){}endTicking(){}ticking(){if(!this.tb.isBoardActive)return;if(this.tb.board.getFallingBlocks().length||this.tb.spawnFromNext()||this.tb.ctrl.boardEnd(),this.tb.tick+=1,this.tb.stepTick+=1,this.tb.comboTick>0?this.tb.comboTick-=1:(this.tb.comboTick=0,this.tb.combo=0),this.tb.isPlacingDelay)try{this.tb.board.tryStep()}catch{if(this.tb.placingDelayTick+=1,this.tb.placingDelayTick>=30){this.tb.isPlacingDelay=!1;const[,e]=this.tb.placing();e&&this.tb.ctrl.scoreEffect(e,this.tb.combo)}}const t=this.tb.info.level??1;if(this.tb.stepTick>=n.levelGravityTick[t>20?20:t]){this.tb.stepTick=0;try{this.tb.ctrl.step()}catch{this.tb.isPlacingDelay||(this.tb.isPlacingDelay=!0,this.tb.placingDelayTick=0,this.tb.placingResetCnt=15)}}}}class W{tb;constructor(t){this.tb=t}endTicking(){}initTicking(){const t=Array(5).fill(null).map(()=>this.tb.getTetriminoFromSevenBag());this.tb.ctrl.setup({hold:null,next:t}),this.tb.ctrl.boardStart(),this.tb.stepTick=999}ticking(){if(!this.tb.isBoardActive)return;if(this.tb.board.getFallingBlocks().length||this.tb.spawnFromNext()||this.tb.ctrl.boardEnd(),this.tb.tick+=1,this.tb.stepTick+=1,this.tb.comboTick>0?this.tb.comboTick-=1:(this.tb.comboTick=0,this.tb.combo=0),this.tb.isPlacingDelay)try{this.tb.board.tryStep()}catch{if(this.tb.placingDelayTick+=1,this.tb.placingDelayTick>=30){this.tb.isPlacingDelay=!1;const[,e]=this.tb.placing();e&&this.tb.ctrl.scoreEffect(e,this.tb.combo)}}const t=this.tb.info.level??1;if(this.tb.stepTick>=n.levelGravityTick[t>20?20:t]){this.tb.stepTick=0;try{this.tb.ctrl.step()}catch{this.tb.isPlacingDelay||(this.tb.isPlacingDelay=!0,this.tb.placingDelayTick=0,this.tb.placingResetCnt=15)}}}}class I{tb;constructor(t){this.tb=t}actMoveLeft(){if(this.tb.isBoardActive)try{this.tb.ctrl.moveLeft(),this.tb.placingResetCnt>0&&(this.tb.placingDelayTick=0,this.tb.placingResetCnt-=1),this.tb.renderHandler.isDirty=!0}catch{}}actMoveRight(){if(this.tb.isBoardActive)try{this.tb.ctrl.moveRight(),this.tb.placingResetCnt>0&&(this.tb.placingDelayTick=0,this.tb.placingResetCnt-=1),this.tb.renderHandler.isDirty=!0}catch{}}actRotateLeft(){if(this.tb.isBoardActive)try{this.tb.ctrl.rotateLeft(),this.tb.isTSpin=this.tb.tSpinCheck(),this.tb.placingResetCnt>0&&(this.tb.placingDelayTick=0,this.tb.placingResetCnt-=1),this.tb.renderHandler.isDirty=!0}catch{}}actRotateRight(){if(this.tb.isBoardActive)try{this.tb.ctrl.rotateRight(),this.tb.isTSpin=this.tb.tSpinCheck(),this.tb.placingResetCnt>0&&(this.tb.placingDelayTick=0,this.tb.placingResetCnt-=1),this.tb.renderHandler.isDirty=!0}catch{}}actSoftDrop(){this.tb.isBoardActive&&(this.tb.ctrl.step(),this.tb.info.score!==void 0&&(this.tb.info.score+=n.score.SoftDrop))}actHardDrop(){if(!this.tb.isBoardActive)return;const t=this.tb.ctrl.hardDrop();this.tb.info.score!==void 0&&(this.tb.info.score+=n.score.HardDrop*t),this.tb.isPlacingDelay=!1,this.tb.renderHandler.isDirty=!0;const[,e]=this.tb.placing();e&&this.tb.ctrl.scoreEffect(e,this.tb.combo)}actHold(){if(!this.tb.isBoardActive||!this.tb.isCanHold)return;this.tb.isCanHold=!1;const t=this.tb.hold;if(t){const s=this.tb.board.getFallingBlocks().shift();s&&this.tb.ctrl.addHold(s.falling.kind),this.tb.ctrl.removeFalling(),this.tb.ctrl.spawn(t)}else{const s=this.tb.board.getFallingBlocks().shift();s&&(this.tb.ctrl.addHold(s.falling.kind),this.tb.ctrl.removeFalling())}this.tb.isPlacingDelay=!1}}class O{render;meshList=["Grid","Case","Next","Hold","Cover"];textList=["infoText","nickNameText"];tetriminos=["I","O","T","J","L","S","Z","Hint","Garbage"];isDirty=!1;tetrisBoard;isScoreEffectOn=!1;scoreEffectTimeout=null;constructor(t,e){this.tetrisBoard=t,this.render=e}object=new b;create(t){this.object.position.set(...t.position),this.object.rotation.set(...t.rotation),this.object.scale.set(...t.scale);const e=new y;e.position.copy(this.object.position),e.rotation.copy(this.object.rotation),e.scale.copy(this.object.scale);const s=new b;e.add(s);const i=new g,c=new v,o=new g,r=a=>{const h=a.position,d=a.scale;s.position.set(...h),s.scale.set(...d),s.getWorldPosition(i),s.getWorldScale(o),s.getWorldQuaternion(c);const l=new b;return l.position.copy(i),l.quaternion.copy(c),l.scale.copy(o),l};this.meshList.forEach(a=>{n.gfx.boardCoord[a].forEach(h=>{const d=r(h);this.render.pushInstancedMeshInfo(a,{id:`${this.tetrisBoard.boardId}`,object:d})})}),this.textList.forEach(a=>{n.gfx.boardCoord[a].forEach(h=>{const d=r(h);this.render.addText(`${this.tetrisBoard.boardId}_${a}`,"",d)})})}update(){const t=new y;t.position.copy(this.object.position),t.rotation.copy(this.object.rotation),t.scale.copy(this.object.scale);const e=new b;t.add(e);const s=new g,i=new v,c=new x,o=new g;for(const r of this.tetriminos)this.render.removeInstancedMeshInfoByFilterId(r,this.tetrisBoard.boardId);for(const[r,a]of this.tetrisBoard.next.entries())for(const[h,d]of n.gfx.blockLocation[a]){e.position.set(12+h,-7+-r*3+d,0),e.getWorldPosition(s),e.getWorldQuaternion(i),c.setFromQuaternion(i),e.getWorldScale(o);const l=new b;l.position.copy(s),l.quaternion.copy(i),l.scale.copy(o),this.render.pushInstancedMeshInfo(a,{id:`${this.tetrisBoard.boardId}`,object:l})}if(this.tetrisBoard.hold)for(const[r,a]of n.gfx.blockLocation[this.tetrisBoard.hold]){e.position.set(-6+r,-7+a,0),e.getWorldPosition(s),e.getWorldQuaternion(i),c.setFromQuaternion(i),e.getWorldScale(o);const h=new b;h.position.copy(s),h.quaternion.copy(i),h.scale.copy(o),this.render.pushInstancedMeshInfo(this.tetrisBoard.hold,{id:`${this.tetrisBoard.boardId}`,object:h})}for(const[r,a]of this.tetrisBoard.board.getBoard().entries())for(const[h,d]of a.entries())if(d!=="Empty"){if("Falling"in d){e.position.set(h,-r,0),e.getWorldPosition(s),e.getWorldQuaternion(i),c.setFromQuaternion(i),e.getWorldScale(o);const l=new b;l.position.copy(s),l.quaternion.copy(i),l.scale.copy(o);const u=d.Falling.kind;this.render.pushInstancedMeshInfo(u,{id:`${this.tetrisBoard.boardId}`,object:l})}else if("Placed"in d){e.position.set(h,-r,0),e.getWorldPosition(s),e.getWorldQuaternion(i),c.setFromQuaternion(i),e.getWorldScale(o);const l=new b;l.position.copy(s),l.quaternion.copy(i),l.scale.copy(o);const u=d.Placed,p=n.gfx.placeIdMap[u];this.render.pushInstancedMeshInfo(p,{id:`${this.tetrisBoard.boardId}`,object:l})}else if("Hint"in d){e.position.set(h,-r,0),e.getWorldPosition(s),e.getWorldQuaternion(i),c.setFromQuaternion(i),e.getWorldScale(o);const l=new b;l.position.copy(s),l.quaternion.copy(i),l.scale.copy(o),this.render.pushInstancedMeshInfo("Hint",{id:`${this.tetrisBoard.boardId}`,object:l})}}}addEndCover(){const t=new y;t.position.copy(this.object.position),t.rotation.copy(this.object.rotation),t.scale.copy(this.object.scale);const e=new b;t.add(e);const s=new g,i=new v,c=new g,o=r=>{const a=r.position,h=r.scale;e.position.set(...a),e.scale.set(...h),e.getWorldPosition(s),e.getWorldScale(c),e.getWorldQuaternion(i);const d=new b;return d.position.copy(s),d.quaternion.copy(i),d.scale.copy(c),d};n.gfx.boardCoord.EndCover.forEach(r=>{const a=o(r);this.render.pushInstancedMeshInfo("EndCover",{id:`${this.tetrisBoard.boardId}`,object:a})})}removeEndCover(){this.render.removeInstancedMeshInfoByFilterId("EndCover",`${this.tetrisBoard.boardId}`)}removeGarbageQueue(){this.render.removeInstancedMeshInfoByFilterId("GarbageQueue",`${this.tetrisBoard.boardId}`),this.render.removeInstancedMeshInfoByFilterId("GarbageReady",`${this.tetrisBoard.boardId}`)}move(t){this.object.position.set(...t.position),this.object.rotation.set(...t.rotation),this.object.scale.set(...t.scale);const e=new y;e.position.copy(this.object.position),e.rotation.copy(this.object.rotation),e.scale.copy(this.object.scale);const s=new b;e.add(s);const i=new g,c=new v,o=new g,r=a=>{const h=a.position,d=a.scale;s.position.set(...h),s.scale.set(...d),s.getWorldPosition(i),s.getWorldScale(o),s.getWorldQuaternion(c);const l=new b;return l.position.copy(i),l.quaternion.copy(c),l.scale.copy(o),l};this.textList.forEach(a=>{n.gfx.boardCoord[a].forEach(h=>{const d=r(h);this.render.moveText(`${this.tetrisBoard.boardId}_${a}`,d)})}),this.meshList.forEach(a=>{this.render.removeInstancedMeshInfoByFilterId(a,`${this.tetrisBoard.boardId}`),n.gfx.boardCoord[a].forEach(h=>{const d=r(h);this.render.pushInstancedMeshInfo(a,{id:`${this.tetrisBoard.boardId}`,object:d})})}),this.garbageQueueSet(this.tetrisBoard.garbageQueue),this.tetrisBoard.isAddEndCover?(this.removeEndCover(),this.addEndCover()):this.removeEndCover(),this.update()}garbageQueueSet(t){const e=new y;e.position.copy(this.object.position),e.rotation.copy(this.object.rotation),e.scale.copy(this.object.scale);const s=new b;e.add(s);const i=new g,c=new v,o=new g,r=d=>{const l=d.position,u=d.scale;s.position.set(...l),s.scale.set(...u),s.getWorldPosition(i),s.getWorldScale(o),s.getWorldQuaternion(c);const p=new b;return p.position.copy(i),p.quaternion.copy(c),p.scale.copy(o),p};this.render.removeInstancedMeshInfoByFilterId("GarbageQueue",`${this.tetrisBoard.boardId}`),this.render.removeInstancedMeshInfoByFilterId("GarbageReady",`${this.tetrisBoard.boardId}`);const a=-26;let h=0;console.log("garbageQueue",t);for(const d of t)for(let l=0;l<d.line;l++){h+=1;const u=r({position:[-1,a+h,0],scale:[.5,1,1]});d.kind==="Queued"?this.render.pushInstancedMeshInfo("GarbageQueue",{id:`${this.tetrisBoard.boardId}`,object:u}):d.kind==="Ready"&&this.render.pushInstancedMeshInfo("GarbageReady",{id:`${this.tetrisBoard.boardId}`,object:u})}}infoTextMake({level:t,score:e,time:s,line:i}){const c=[];return c.push(`level:
${t??1}`),c.push(`line:
${i??0}`),c.push(`score:
${e??0}`),c.push(`time:
${k(new Date((s??0)*1e3),"mm:ss:SS")}`),c.join(`
`)}updateInfoText(){this.render.updateText(`${this.tetrisBoard.boardId}_infoText`,this.infoTextMake(this.tetrisBoard.info))}updateNickNameText(t){this.render.updateText(`${this.tetrisBoard.boardId}_nickNameText`,t)}scoreEffect(t,e){const s=new y;s.position.copy(this.object.position),s.rotation.copy(this.object.rotation),s.scale.copy(this.object.scale);const i=new b;s.add(i);const c=new g,o=new v,r=new x,a=new g;this.isScoreEffectOn&&(this.scoreEffectTimeout&&clearTimeout(this.scoreEffectTimeout),this.render.removeText(`${this.tetrisBoard.boardId}_ScoreEffectText`)),i.position.set(-4,-10,0),i.getWorldPosition(c),i.getWorldQuaternion(o),r.setFromQuaternion(o),i.getWorldScale(a);const h=new b;h.position.copy(c),h.quaternion.copy(o),h.scale.copy(a);let d;e?d=`${t}
${e} Combo`:d=`${t}`,this.isScoreEffectOn=!0,this.render.addText(`${this.tetrisBoard.boardId}_ScoreEffectText`,d,h),this.scoreEffectTimeout=setTimeout(()=>{this.render.removeText(`${this.tetrisBoard.boardId}_ScoreEffectText`),this.isScoreEffectOn=!1},1500)}frame(){this.isDirty&&(this.tetrisBoard.showFallingHint(),this.update(),this.isDirty=!1),this.updateInfoText()}destroy(){[...this.meshList,...this.tetriminos].forEach(t=>{this.render.removeInstancedMeshInfoByFilterId(t,`${this.tetrisBoard.boardId}`)}),this.render.removeInstancedMeshInfoByFilterId("EndCover",`${this.tetrisBoard.boardId}`),this.textList.forEach(t=>{this.render.removeText(`${this.tetrisBoard.boardId}_${t}`)})}}class ${timeoutMap=new Map;timeoutSeq=0;frame(t){for(const[e,s]of this.timeoutMap.entries())s.acc+=t,s.acc-s.last>=s.ms&&(s.callback(),s.isTimeout?this.timeoutMap.delete(e):s.last+=s.ms)}setTimeout(t,e){return this.timeoutSeq+=1,this.timeoutMap.set(this.timeoutSeq,{callback:t,ms:e/1e3,acc:0,last:0,isTimeout:!0}),this.timeoutSeq}setInterval(t,e){return this.timeoutSeq+=1,this.timeoutMap.set(this.timeoutSeq,{callback:t,ms:e/1e3,acc:0,last:0,isTimeout:!1}),this.timeoutSeq}clearTimeout(t){this.timeoutMap.delete(t)}clearInterval(t){this.timeoutMap.delete(t)}}class _{moveFirstStuckDelay=1/60*1e3*8;moveIntervalDelay=1/60*1e3*2;softDropDelay=1/60*1e3*2;delegation;isActive=!0;handleKeyDown=this.keydown.bind(this);handleKeyUp=this.keyup.bind(this);raTimer=new $;moveLeftTimeout=null;moveLeftInterval=null;moveRightTimeout=null;moveRightInterval=null;moveSet=new Set;rotating=!1;softDropInterval=null;keydown(t){if(!this.isActive||t.repeat)return;const e=t.key;if(e==="a"||e==="ArrowLeft"){const s=()=>{const i=[...this.moveSet];i[i.length-1]==="L"&&this.delegation?.actMoveLeft()};this.moveSet.add("L"),s(),this.moveLeftTimeout=this.raTimer.setTimeout(()=>{s(),this.moveLeftInterval=this.raTimer.setInterval(()=>{s()},this.moveIntervalDelay)},this.moveFirstStuckDelay)}if(e==="d"||e==="ArrowRight"){const s=()=>{const i=[...this.moveSet];i[i.length-1]==="R"&&this.delegation?.actMoveRight()};this.moveSet.add("R"),s(),this.moveRightTimeout=this.raTimer.setTimeout(()=>{s(),this.moveRightInterval=this.raTimer.setInterval(()=>{s()},this.moveIntervalDelay)},this.moveFirstStuckDelay)}if(e==="w"||e==="ArrowUp"){if(this.rotating)return;this.rotating=!0,this.delegation?.actRotateRight()}if(e==="z"){if(this.rotating)return;this.rotating=!0,this.delegation?.actRotateLeft()}(e==="s"||e==="ArrowDown")&&(this.softDropInterval&&this.raTimer.clearInterval(this.softDropInterval),this.delegation?.actSoftDrop(),this.softDropInterval=this.raTimer.setInterval(()=>{try{this.delegation?.actSoftDrop()}catch{}},this.softDropDelay)),e==="Shift"&&this.delegation?.actHold(),e===" "&&this.delegation?.actHardDrop()}keyup(t){const e=t.key;(e==="a"||e==="ArrowLeft")&&(this.moveSet.delete("L"),this.moveLeftInterval&&(this.raTimer.clearInterval(this.moveLeftInterval),this.moveLeftInterval=null),this.moveLeftTimeout&&(this.raTimer.clearTimeout(this.moveLeftTimeout),this.moveLeftTimeout=null)),(e==="d"||e==="ArrowRight")&&(this.moveSet.delete("R"),this.moveRightInterval&&(this.raTimer.clearInterval(this.moveRightInterval),this.moveRightInterval=null),this.moveRightTimeout&&(this.raTimer.clearTimeout(this.moveRightTimeout),this.moveRightTimeout=null)),(e==="w"||e==="ArrowUp")&&(this.rotating=!1),e==="z"&&(this.rotating=!1),(e==="s"||e==="ArrowDown")&&this.softDropInterval&&this.raTimer.clearInterval(this.softDropInterval)}frame(t){this.raTimer.frame(t)}init(){window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp)}destroy(){window.removeEventListener("keydown",this.handleKeyDown),window.removeEventListener("keyup",this.handleKeyUp)}}class q{instancedMeshInfos={Cover:{isDirty:!1,objects:[]},EndCover:{isDirty:!1,objects:[]},Case:{isDirty:!1,objects:[]},Grid:{isDirty:!1,objects:[]},Hint:{isDirty:!1,objects:[]},Next:{isDirty:!1,objects:[]},Hold:{isDirty:!1,objects:[]},GarbageQueue:{isDirty:!1,objects:[]},GarbageReady:{isDirty:!1,objects:[]},Garbage:{isDirty:!1,objects:[]},I:{isDirty:!1,objects:[]},O:{isDirty:!1,objects:[]},T:{isDirty:!1,objects:[]},J:{isDirty:!1,objects:[]},L:{isDirty:!1,objects:[]},S:{isDirty:!1,objects:[]},Z:{isDirty:!1,objects:[]}};boxGeo=new D;basicMat=new T;instancedMeshs={Cover:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),EndCover:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),Case:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),Grid:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),Hint:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),Next:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),Hold:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),GarbageQueue:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),GarbageReady:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),Garbage:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),I:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),O:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),T:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),J:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),L:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),S:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve),Z:new m(this.boxGeo,this.basicMat,n.gfx.instancedMeshReserve)};planeGeo=new L;scene;textMat=new T({color:"black",side:j});texts={};init({tetriminoGeo:t,scene:e,font3d:s}){this.scene=e;const i=this.instancedMeshs;i.Case.material=this.makeLambertMat(n.gfx.color.mesh.Case),i.Cover.material=this.makeLambertMat(n.gfx.color.mesh.Cover,{opacity:.7,transparent:!0}),i.EndCover.material=this.makeLambertMat(n.gfx.color.mesh.EndCover,{opacity:.5,transparent:!0}),i.Next.geometry=new B("NEXT",{font:s,size:n.gfx.font3d.size,depth:n.gfx.font3d.depth}),i.Next.material=this.makeLambertMat(n.gfx.color.mesh.Next),i.Hold.geometry=new B("HOLD",{font:s,size:n.gfx.font3d.size,depth:n.gfx.font3d.depth}),i.Hold.material=this.makeLambertMat(n.gfx.color.mesh.Hold),i.Grid.geometry=this.planeGeo,i.Grid.material=this.makeLambertMat(n.gfx.color.mesh.Grid),i.GarbageQueue.geometry=t,i.GarbageQueue.material=this.makeLambertMat(n.gfx.color.mesh.GarbageQueue),i.GarbageReady.geometry=t,i.GarbageReady.material=this.makeLambertMat(n.gfx.color.mesh.GarbageReady),i.Garbage.geometry=t,i.Garbage.material=this.makeLambertMat(n.gfx.color.mesh.Garbage),i.Hint.geometry=t,i.Hint.material=this.makeLambertMat(n.gfx.color.mesh.Hint,{opacity:.7,transparent:!0}),i.Hint.renderOrder=999,i.I.geometry=t,i.I.material=this.makeLambertMat(n.gfx.color.mesh.I),i.O.geometry=t,i.O.material=this.makeLambertMat(n.gfx.color.mesh.O),i.T.geometry=t,i.T.material=this.makeLambertMat(n.gfx.color.mesh.T),i.J.geometry=t,i.J.material=this.makeLambertMat(n.gfx.color.mesh.J),i.L.geometry=t,i.L.material=this.makeLambertMat(n.gfx.color.mesh.L),i.S.geometry=t,i.S.material=this.makeLambertMat(n.gfx.color.mesh.S),i.Z.geometry=t,i.Z.material=this.makeLambertMat(n.gfx.color.mesh.Z);for(const[,c]of Object.entries(this.instancedMeshs))c.count=0,c.frustumCulled=!1,this.scene.add(c)}makeLambertMat(t,e){return new H({color:t,...e})}updateInstancedMeshs(){Object.entries(this.instancedMeshInfos).forEach(([e,s])=>{s.isDirty&&(s.objects.forEach(({object:i},c)=>{i.updateMatrix(),this.instancedMeshs[e].setMatrixAt(c,i.matrix)}),this.instancedMeshs[e].count=s.objects.length,this.instancedMeshs[e].instanceMatrix.needsUpdate=!0,s.isDirty=!1)})}pushInstancedMeshInfo(t,e){this.instancedMeshInfos[t].isDirty=!0,this.instancedMeshInfos[t].objects.push(e)}updateInstancedMeshInfo(t,e,s){for(const i of this.instancedMeshInfos[t].objects)i.id===e&&(this.instancedMeshInfos[t].isDirty=!0,i.object=s)}updateInstancedMeshInfos(t,e,s){this.removeInstancedMeshInfoByFilterId(t,e);const i=[...this.instancedMeshInfos[t].objects,...s];this.instancedMeshInfos[t].objects=i,this.instancedMeshInfos[t].isDirty=!0}removeInstancedMeshInfoByFilterId(t,e){const s=this.instancedMeshInfos[t].objects.filter(i=>!i.id.includes(e));this.instancedMeshInfos[t].objects=s,this.instancedMeshInfos[t].isDirty=!0}hasInstancedMeshInfoByFilterId(t,e){return this.instancedMeshInfos[t].objects.filter(i=>!i.id.includes(e)).length>0}addText(t,e,s){const i=new E;i.text=`${e}`,i.fontSize=1,i.position.copy(s.position),i.rotation.copy(s.rotation),i.scale.copy(s.scale),i.anchorX="center",i.anchorY="middle",i.material=this.textMat,this.scene?.add(i),i.sync(),this.texts[t]=i}removeText(t){const e=this.texts[t];e&&(this.scene?.remove(e),e.geometry.dispose(),Array.isArray(e.material)?e.material.forEach(s=>s.dispose()):e.material.dispose())}moveText(t,e){this.texts[t]?.position.copy(e.position),this.texts[t]?.rotation.copy(e.rotation),this.texts[t]?.scale.copy(e.scale)}updateText(t,e){const s=this.texts[t];s&&s.text!==e&&(s.text=e)}destroy(){for(const[,t]of Object.entries(this.instancedMeshs))t&&(this.scene?.remove(t),t.geometry.dispose(),Array.isArray(t.material)?t.material.forEach(e=>e.dispose()):t.material.dispose())}}class U{accumulatedDelta=0;oneTick=1/60;maxCatchUpSteps=5;delegation;gameLoopStart(){this.accumulatedDelta=0,this.delegation?.initTicking()}gameLoopUpdate(t){this.accumulatedDelta=Math.min(this.accumulatedDelta+t,this.oneTick*10);let e=0;for(;this.accumulatedDelta>=this.oneTick&&e<this.maxCatchUpSteps;)this.delegation?.ticking(),this.accumulatedDelta-=this.oneTick,e++}gameLoopEnd(){this.delegation?.endTicking()}}class J{gm;_sender;constructor(t){this.gm=t}set sender(t){this._sender=t}get sender(){return this._sender}gameId;wsSend(t){if(this.gameId){const e={type:"gameAction",data:{action:t,gameId:this.gameId}};this._sender&&this._sender(JSON.stringify(e))}else console.log("gameId is not set")}}class Z{gm;constructor(t){this.gm=t}onWsMessage(t){const{type:e,data:s}=JSON.parse(t);if(e==="gameAction2"){for(const[i,c]of Object.entries(s.action))for(const{action:o}of c)if(typeof o=="object"&&o!==null&&"setup"in o){if(i===this.gm.mainBoardId)continue;const r=o.setup.next;this.gm.boards[i]?.ctrl.setup({next:r,hold:null})}else if(typeof o=="object"&&o!==null&&"spawn"in o){if(i===this.gm.mainBoardId)continue;const r=o.spawn.spawn;this.gm.boards[i]?.ctrl.spawn(r)}else if(typeof o=="string"&&o==="moveLeft"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.moveLeft()}else if(typeof o=="string"&&o==="moveRight"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.moveRight()}else if(typeof o=="string"&&o==="rotateLeft"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.rotateLeft()}else if(typeof o=="string"&&o==="rotateRight"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.rotateRight()}else if(typeof o=="string"&&o==="placing"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.placing()}else if(typeof o=="string"&&o==="lineClear"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.lineClear()}else if(typeof o=="string"&&o==="step"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.step()}else if(typeof o=="string"&&o==="doStep"){if(i!==this.gm.mainBoardId||!this.gm.boards[i]?.isBoardActive)continue;if(this.gm.boards[i])try{this.gm.boards[i].stepTick=0,this.gm.boards[i].ctrl.step()}catch{this.gm.boards[i].isPlacingDelay||(this.gm.boards[i].isPlacingDelay=!0,this.gm.boards[i].placingDelayTick=0,this.gm.boards[i].placingResetCnt=15),document.hidden&&(this.gm.boards[i].isPlacingDelay=!0,this.gm.boards[i].placingDelayTick=999,this.gm.boards[i].tickerHandler?.ticking())}}else if(typeof o=="string"&&o==="softDrop"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.softDrop()}else if(typeof o=="string"&&o==="hardDrop"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.hardDrop()}else if(typeof o=="string"&&o==="removeFalling"){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.removeFalling()}else if(typeof o=="string"&&o==="ticking")this.gm.boards[i]?.tickerHandler?.ticking();else if(typeof o=="string"&&o==="boardStart"){const r=Array(5).fill(null).map(()=>this.gm.boards[i].getTetriminoFromSevenBag());this.gm.boards[i]?.ctrl.setup({hold:null,next:r}),this.gm.boards[i]?.ctrl.boardStart()}else if(typeof o=="object"&&o!==null&&"pushNext"in o){if(i===this.gm.mainBoardId)continue;const r=o.pushNext.next;this.gm.boards[i]?.ctrl.pushNext(r)}else if(typeof o=="object"&&o!==null&&"shiftNext"in o){if(i===this.gm.mainBoardId)continue;this.gm.boards[i]?.ctrl.shiftNext()}else if(typeof o=="object"&&o!==null&&"addHold"in o){if(i===this.gm.mainBoardId)continue;const r=o.addHold.hold;this.gm.boards[i]?.ctrl.addHold(r)}else if(typeof o=="object"&&o!==null&&"setInfo"in o){if(i===this.gm.mainBoardId)continue;const r=o.setInfo.line,a=o.setInfo.score,h=o.setInfo.level;this.gm.boards[i]?.ctrl.setInfo({level:h,score:a,line:r})}else if(typeof o=="object"&&o!==null&&"scoreEffect"in o){if(i===this.gm.mainBoardId)continue;const r=o.scoreEffect.kind,a=o.scoreEffect.combo;this.gm.boards[i]?.ctrl.scoreEffect(r,a)}else if(typeof o=="object"&&o!==null&&"boardEnd"in o){const r=o.boardEnd.elapsed;console.log("boardEnd elapsed: ",r),this.gm.boards[i]?.ctrl.boardEnd(r/1e3)}else if(typeof o=="object"&&o!==null&&"garbageQueue"in o){const r=o.garbageQueue.queue;this.gm.boards[i]?.ctrl.garbageQueue(r),console.log("GARBAGE QUEUE, ",i,r)}else if(typeof o=="object"&&o!==null&&"doGarbageAdd"in o){const r=o.doGarbageAdd.empty;console.log("doGarbageAdd",r),this.gm.boards[i]?.ctrl.garbageAdd(r)}else if(!(typeof o=="object"&&o!==null&&"addGarbage"in o)){if(typeof o=="string"&&o==="doSpawnNext"){if(i!==this.gm.mainBoardId)continue;this.gm.boards[i]?.spawnFromNext()||this.gm.boards[i]?.ctrl.boardEnd()}}}}}class z{gm;constructor(t){this.gm=t}boundary=Array(10).fill(null).map((t,e)=>{const s=e+1;return[s*s,s,1/s]});subBoardTransformLayout=[];getBoardGridLayout(t){let e=[1,1,1];if(t!==1)for(let s=0;s<this.boundary.length;s++)if(s<this.boundary.length-1){const i=this.boundary[s],c=this.boundary[s+1],o=i[0],r=c[0];if(o<t&&t<=r){e=this.boundary[s+1];break}}else e=this.boundary[this.boundary.length-1];return{cols:e[1],rows:e[1],scale:e[2]}}generateBoardTransformSlot(t){const{cols:e,scale:s}=this.getBoardGridLayout(t),o=26+0,r=26/2+26*s/2,a=h=>{const d=h%e,l=Math.floor(h/e),u=r+-4.5*s+o*s*d,p=r-o*s+15.5*s-o*s*l;return{x:u,y:p,rotation:0}};this.subBoardTransformLayout=Array(t).fill(null).map((h,d)=>{const l=a(d);return{transform:{position:[l.x,l.y,0],rotation:[0,l.rotation,0],scale:[s,s,s]},boardId:null}})}subBoardLayoutPacking(t){const e=Object.entries(this.gm.boards).filter(i=>i[0]!==this.gm.mainBoardId).length,s=[...this.subBoardTransformLayout.filter(i=>i.boardId!==null)];this.generateBoardTransformSlot(e+t),s.forEach((i,c)=>{this.subBoardTransformLayout[c].boardId=i.boardId;const o=this.subBoardTransformLayout[c];o.boardId&&this.gm.boards[o.boardId]?.renderHandler.move(o.transform)})}}class K{render=new q;input=new _;boards={};gameLoop=new U;wsReceiver=new Z(this);wsSender=new J(this);layout=new z(this);mainBoardId;mainNickName;mainBoardTransform={position:[-4.5,15.5,0],rotation:[0,0,0],scale:[1,1,1]};constructor(){}init({tetriminoGeo:t,scene:e,font3d:s}){this.render.init({tetriminoGeo:t,scene:e,font3d:s}),this.input.init()}multiGameSync(t){for(const[e,s]of Object.entries(t))this.boards[e]?.boardSync(s)}createMultiPlayerBoard(t,e){this.mainBoardId=t,this.mainNickName=e;const s=new S(this.render,t,e);s.actionHandler=new I(s),s.tickerHandler=new P(s),this.input.delegation=s.actionHandler,this.gameLoop.delegation=s.tickerHandler,s.wsSender=this.wsSender,s.init(this.mainBoardTransform),this.boards[t]=s}createMultiSubBoard(t,e){this.layout.subBoardLayoutPacking(1);const s=new S(this.render,t,e);s.actionHandler=new I(s),this.boards[t]=s;let i;for(const c of this.layout.subBoardTransformLayout)if(c.boardId===null){i=c.transform,c.boardId=t;break}i&&s.init(i)}createPlayerBoard(t,e){this.mainBoardId=t,this.mainNickName=e;const s=new S(this.render,t,e);s.actionHandler=new I(s),s.tickerHandler=new W(s),this.input.delegation=s.actionHandler,this.gameLoop.delegation=s.tickerHandler,s.init(this.mainBoardTransform),this.boards[t]=s}createSubBoard(t,e){const s=new S(this.render,t,e);s.actionHandler=new I(s),s.init(this.mainBoardTransform),this.boards[t]=s}deleteBoard(t){this.boards[t]?.destroy(),delete this.boards[t],this.layout.subBoardTransformLayout.forEach(e=>{e.boardId===t&&(e.boardId=null)}),this.layout.subBoardLayoutPacking(0)}moveBoard(t,e){this.boards[t]?.renderHandler.move(e)}frame(t){this.input.frame(t),this.gameLoop.gameLoopUpdate(t);for(const[,e]of Object.entries(this.boards))e?.timer.tick(t),e?.renderHandler.frame();this.render.updateInstancedMeshs()}setWsSender(t){this.wsSender.sender=t}setWsSenderGameId(t){t&&(this.wsSender.gameId=t)}onWsMessage(t){this.wsReceiver.onWsMessage(t)}destroy(){this.render.destroy(),this.input.destroy();for(const[t]of Object.entries(this.boards))this.deleteBoard(t)}}const V=w.forwardRef(({send:f},t)=>{const e=w.useRef(new K),{nodes:s}=R("/t3tris"+n.gfx.url.tetriminoGlb),i=C(F,n.gfx.url.font3d),{scene:c}=G();w.useEffect(()=>{const r=e.current,a=s.Cube.geometry;return r.init({tetriminoGeo:a,scene:c,font3d:i}),f&&r.setWsSender(f),()=>{r.destroy()}},[i,s.Cube,c,f]),A((r,a)=>{e.current.frame(a)});const o={createPlayerBoard(r,a){e.current.createPlayerBoard(r,a)},createSubBoard(r,a){e.current.createSubBoard(r,a)},deleteBoard(r){e.current.deleteBoard(r)},boardTimerOn:function(r){e.current.boards[r]?.timer.on()},boardTimerOff:function(r){e.current.boards[r]?.timer.off()},boardTimerReset:function(r){e.current.boards[r]?.timer.reset()},gameStart(){e.current.gameLoop.gameLoopStart()},spawnFromNext:function(r){e.current.boards[r]?.spawnFromNext()},step:function(r){e.current.boards[r]?.ctrl.step()},setup(r,a){e.current.boards[r]?.ctrl.setup(a)},onWsMessage(r){e.current.onWsMessage(r)},createMulitPlayerBoard(r,a){e.current.createMultiPlayerBoard(r,a)},createMultiSubBoard(r,a){e.current.createMultiSubBoard(r,a)},setWsSenderGameId(r){e.current.setWsSenderGameId(r)},getBoards(){return e.current.boards},moveBoard(r,a){e.current.moveBoard(r,a)},gameSync(r){e.current.multiGameSync(r)}};return w.useImperativeHandle(t,()=>o),null});export{V as C,$ as R};
