const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/Perf-ck5EojeO.js","assets/index-B3wLd9-D.js","assets/index-B7GaFbHf.css","assets/leva.esm-QkAMYWHR.js"])))=>i.map(i=>d[i]);
import{r as l,s as p,x as r,t as I,C as S,ad as x,ae as k,af as O,A as _,B,D,ag as T}from"./index-B3wLd9-D.js";import{u as w,b as a}from"./leva.esm-QkAMYWHR.js";const L=k.lazy(()=>O(()=>import("./Perf-ck5EojeO.js"),__vite__mapDeps([0,1,2,3]))),F=()=>{const t=l.useRef(null),o=l.useRef(0),d=l.useRef(0);w({boardId:{value:"HI",label:"boardId"},boardCreateMy:a(e=>{t.current?.boardCreateMy(e("boardId"),{nickName:"nick_"+e("boardId")}),o.current+=1}),boardCreateBySlot:a(e=>{t.current?.boardCreateBySlot(e("boardId"),{nickName:"nick_"+e("boardId")}),o.current+=1}),boardDelete:a(e=>{t.current?.boardDelete(e("boardId"))}),spawnNext:a(e=>{t.current?.spawnFromNext(e("boardId"),C())}),step:a(e=>{t.current?.step(e("boardId"))}),moveRight:a(e=>{t.current?.moveRight(e("boardId"))}),moveLeft:a(e=>{t.current?.moveLeft(e("boardId"))}),rotateRight:a(e=>{t.current?.rotateRight(e("boardId"))}),rotateLeft:a(e=>{t.current?.rotateLeft(e("boardId"))}),hardDrop:a(e=>{t.current?.hardDrop(e("boardId"))}),placing:a(e=>{t.current?.placing(e("boardId"))}),lineClear:a(e=>{t.current?.lineClear(e("boardId"))}),boardReset:a(e=>{t.current?.boardReset(e("boardId"))}),cameraTest:a(e=>{if(E.current&&i.current){const c=e("boardId"),{position:m,rotation:n}=t.current.tetrisInfo(c).boardTransform;console.log(m,n);const u=n[1]+Math.PI/2,b=4.5,R=Math.sin(u)*b,M=Math.cos(u)*b,f=R,v=-12.5,g=M,h=new _(m[0],m[1],m[2]),y=h.clone().normalize().multiplyScalar(-30).add(h),s=y.clone().normalize().multiplyScalar(-10).add(y);E.current.target.set(y.x+f,y.y+v,y.z+g),i.current.position.set(s.x+f,s.y+v,s.z+g),E.current.update()}d.current+=1}),scoreEffect:a(e=>{const c=e("boardId");t.current.scoreEffect(c,"sdf")}),infoTextUpdat:a(e=>{const c=e("boardId");t.current.infoTextUpdate(c,{level:999})}),addEndCover:a(e=>{const c=e("boardId");t.current.addEndCover(c,"sdf")}),removeEndCover:a(e=>{const c=e("boardId");t.current.removeEndCover(c)}),timerOn:a(e=>{t.current.timerOn(e("boardId"))}),timerOff:a(e=>{t.current.timerOff(e("boardId"))}),timerReset:a(e=>{t.current.timerReset(e("boardId"))}),garbageQueue:a(e=>{t.current.garbageQueueSet(e("boardId"),[{kind:"Queued",line:1},{kind:"Ready",line:2},{kind:"Queued",line:3}])}),garbageAdd:a(e=>{t.current.garbageAdd(e("boardId"),[1,2,3])}),gameSync:a(e=>{const n={data:{data:{[e("boardId")]:{board:[["Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty"],[{Placed:4},"Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty","Empty"],[{Placed:4},{Placed:4},{Placed:4},"Empty","Empty","Empty","Empty","Empty","Empty","Empty"],["Empty",{Placed:3},"Empty","Empty","Empty","Empty","Empty","Empty",{Placed:6},{Placed:6}],[{Placed:3},{Placed:3},{Placed:3},"Empty","Empty","Empty","Empty",{Placed:6},{Placed:6},{Placed:3}],[{Placed:4},{Placed:4},"Empty","Empty","Empty","Empty","Empty","Empty",{Placed:3},{Placed:3}],[{Placed:4},{Placed:4},"Empty","Empty","Empty","Empty","Empty","Empty",{Placed:5},{Placed:3}],[{Placed:4},{Placed:4},"Empty",{Falling:{id:0,kind:"J",rotation:"D0"}},"Empty","Empty","Empty","Empty",{Placed:5},"Empty"],[{Placed:4},{Placed:4},{Placed:5},{Falling:{id:1,kind:"J",rotation:"D0"}},{Falling:{id:2,kind:"J",rotation:"D0"}},{Falling:{id:3,kind:"J",rotation:"D0"}},"Empty","Empty",{Placed:5},{Placed:5}],[{Placed:5},{Placed:5},{Placed:5},"Empty","Empty","Empty","Empty","Empty","Empty",{Placed:1}],[{Placed:2},{Placed:2},"Empty","Empty","Empty","Empty","Empty","Empty","Empty",{Placed:1}],[{Placed:2},{Placed:2},"Empty",{Placed:1},{Placed:1},{Placed:1},{Placed:1},"Empty",{Placed:5},{Placed:1}],[{Placed:7},{Placed:7},"Empty","Empty",{Placed:6},{Placed:6},"Empty","Empty",{Placed:5},{Placed:1}],["Empty",{Placed:7},{Placed:7},{Placed:6},{Placed:6},"Empty","Empty","Empty",{Placed:5},{Placed:5}],["Empty","Empty",{Placed:5},{Placed:7},{Placed:7},"Empty",{Placed:1},{Placed:1},{Placed:1},{Placed:1}],[{Placed:5},{Placed:5},{Placed:5},"Empty",{Placed:7},{Placed:7},"Empty","Empty",{Placed:2},{Placed:2}],[{Placed:2},{Placed:2},"Empty",{Placed:7},{Placed:7},"Empty","Empty","Empty",{Placed:2},{Placed:2}],[{Placed:2},{Placed:2},"Empty","Empty",{Placed:7},{Placed:7},{Placed:1},{Placed:1},{Placed:1},{Placed:1}],["Empty",{Placed:3},"Empty","Empty",{Placed:2},{Placed:2},"Empty","Empty",{Placed:2},{Placed:2}],[{Placed:3},{Placed:3},{Placed:3},"Empty",{Placed:2},{Placed:2},"Empty","Empty",{Placed:2},{Placed:2}],[{Placed:4},"Empty","Empty",{Placed:2},{Placed:2},"Empty","Empty","Empty",{Placed:2},{Placed:2}],[{Placed:4},{Placed:4},{Placed:4},{Placed:2},{Placed:2},"Empty","Empty","Empty",{Placed:2},{Placed:2}]],garbageQueue:[{from:"Mndei1HCZORO2gHHsg8XS",kind:"Queued",line:2,tick:3390}],hold:"O",level:1,next:["L","T","T","O","L"],score:588,line:1,isBoardEnd:!1,elapsed:12345}}}}.data.data;t.current.gameSync(n)}),boardMove:a(e=>{t.current.boardMove(e("boardId"),{position:[10,0,0],rotation:[0,0,0],scale:[3,3,3]})})});const P=["I","O","T","J","L","S","Z"],C=()=>P[Math.floor(Math.random()*P.length)],i=l.useRef(null),E=l.useRef(null);return p("div",{css:I`height: 100dvh;`,children:[r("h1",{css:I`position: absolute;`,children:"TestR3fOptPage"}),p(S,{onCreated:()=>{},children:[r(B,{ref:i,makeDefault:!0,position:[0,0,300]}),r(D,{ref:E,target:[1,0,0]}),r(L,{position:"bottom-left"}),p("mesh",{position:[0,0,-1],scale:[26,26,1],children:[r("boxGeometry",{}),r("meshBasicMaterial",{color:"red"})]}),p("mesh",{position:[26/2+26*1/4/2,26/2-26*1/4/2,-1],scale:[26*1/4,26*1/4,1],children:[r("boxGeometry",{}),r("meshBasicMaterial",{color:"blue"})]}),p("mesh",{children:[r("boxGeometry",{}),r("meshBasicMaterial",{color:""})]}),p("mesh",{position:[13,0,0],children:[r("boxGeometry",{}),r("meshBasicMaterial",{color:"yellow"})]}),r("ambientLight",{intensity:2}),[0,Math.PI/2,Math.PI,3*Math.PI/2].map((e,c)=>{const m=Math.cos(e)*100,n=Math.sin(e)*100;return r("directionalLight",{position:[m,100,n],intensity:2},c)}),r(T,{ref:t})]})]})};function Q(){const t=l.useRef(null);return l.useEffect(()=>{if(!t.current)return;const o=t.current.material;o.color=new x("red"),o.onBeforeCompile=d=>{d.vertexShader=`
        varying vec2 vUv;
        ${d.vertexShader}
        `,d.vertexShader=d.vertexShader.replace("#include <uv_vertex>",`
          #include <uv_vertex>
          vUv = uv;
          `),d.fragmentShader=`
        varying vec2 vUv;
        uniform float borderWidth;
        uniform vec3 borderColor;
        ${d.fragmentShader}
      `,d.fragmentShader=d.fragmentShader.replace("#include <dithering_fragment>",`
        float bw = borderWidth;
        bool isBorder = vUv.x < bw || vUv.x > 1.0 - bw || vUv.y < bw || vUv.y > 1.0 - bw;
        if (isBorder) {
          gl_FragColor.rgb = borderColor;
        }
        #include <dithering_fragment>
        `),d.uniforms.borderWidth={value:.05},d.uniforms.borderColor={value:new x("black")},o.userData.shader=d},o.needsUpdate=!0},[]),r("mesh",{ref:t,position:[0,0,0],children:r("boxGeometry",{args:[1,1,1]})})}export{Q as BorderedStandardBox,F as default};
